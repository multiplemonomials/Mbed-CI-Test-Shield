{
    "config": {
        "PIN_I2C_SCL": {
            "help": "Pin connected to I2C_SCL on the test shield.",
            "macro_name": "PIN_I2C_SCL",
            "value": "ARDUINO_UNO_D15"
        },
        "PIN_I2C_SDA": {
            "help": "Pin connected to I2C_SDA on the test shield.",
            "macro_name": "PIN_I2C_SDA",
            "value": "ARDUINO_UNO_D14"
        },
        "PIN_FUNC_SEL0": {
            "help": "Pin connected to FUNC_SEL0 on the test shield.",
            "macro_name": "PIN_FUNC_SEL0",
            "value": "ARDUINO_UNO_A3"
        },
        "PIN_FUNC_SEL1": {
            "help": "Pin connected to FUNC_SEL1 on the test shield.",
            "macro_name": "PIN_FUNC_SEL1",
            "value": "ARDUINO_UNO_A4"
        },
        "PIN_FUNC_SEL2": {
            "help": "Pin connected to FUNC_SEL2 on the test shield.",
            "macro_name": "PIN_FUNC_SEL2",
            "value": "ARDUINO_UNO_A5"
        },
        "PIN_SPI_SCLK": {
            "help": "Pin connected to SPI_SCLK on the test shield.",
            "macro_name": "PIN_SPI_SCLK",
            "value": "ARDUINO_UNO_D13"
        },
        "PIN_SPI_MISO": {
            "help": "Pin connected to SPI_MISO on the test shield.",
            "macro_name": "PIN_SPI_MISO",
            "value": "ARDUINO_UNO_D12"
        },
        "PIN_SPI_MOSI": {
            "help": "Pin connected to SPI_MOSI on the test shield.",
            "macro_name": "PIN_SPI_MOSI",
            "value": "ARDUINO_UNO_D11"
        },
        "PIN_SPI_HW_CS": {
            "help": "Pin connected to SPI_HW_CS on the test shield.  Should be a hardware CS pin.",
            "macro_name": "PIN_SPI_HW_CS",
            "value": "ARDUINO_UNO_D10"
        },
        "PIN_SPI_SD_CS": {
            "help": "Pin connected to SPI_SD_CS on the test shield.  Can be any GPIO.",
            "macro_name": "PIN_SPI_SD_CS",
            "value": "ARDUINO_UNO_D8"
        },
        "PIN_ANALOG_IN": {
            "help": "Pin connected to ANALOG_IN on the test shield.",
            "macro_name": "PIN_ANALOG_IN",
            "value": "ARDUINO_UNO_A0"
        },
        "PIN_GPIN_2": {
            "help": "Pin connected to GPIN_2 on the test shield.",
            "macro_name": "PIN_GPIN_2",
            "value": "ARDUINO_UNO_D7"
        },
        "PIN_GPOUT_2": {
            "help": "Pin connected to GPOUT_2 on the test shield.",
            "macro_name": "PIN_GPOUT_2",
            "value": "ARDUINO_UNO_D6"
        },
        "PIN_GPIN_1": {
            "help": "Pin connected to GPIN_1 on the test shield.",
            "macro_name": "PIN_GPIN_1",
            "value": "ARDUINO_UNO_D4"
        },
        "PIN_GPOUT_1": {
            "help": "Pin connected to GPOUT_1 on the test shield.  Must support PWM output.",
            "macro_name": "PIN_GPOUT_1",
            "value": "ARDUINO_UNO_D5"
        },
        "PIN_GPIN_0": {
            "help": "Pin connected to GPIN_0 on the test shield.",
            "macro_name": "PIN_GPIN_0",
            "value": "ARDUINO_UNO_D2"
        },
        "PIN_GPOUT_0": {
            "help": "Pin connected to GPOUT_0 on the test shield.",
            "macro_name": "PIN_GPOUT_0",
            "value": "ARDUINO_UNO_D3"
        },
        "TESTSHIELD_DEBUG_MESSAGES": {
            "help": "Set to 1 to enable debug messages from the test shield tests",
            "macro_name": "TESTSHIELD_DEBUG_MESSAGES",
            "accepted_values": ["0", "1"],
            "value": "0"
        }
    },
    "target_overrides": {
        "*": {
            "platform.stdio-baud-rate": 115200,
            "platform.stdio-buffered-serial": 1,
			"target.components_add" : ["SD", "I2CEE"],
            "sd.CRC_ENABLED": 1,
            "drivers.spi_transaction_queue_len": 3
        },
        "ARDUINO_NANO33BLE": {
            "sd.SPI_CS": "D10",
            "sd.SPI_MOSI": "D11",
            "sd.SPI_MISO": "D12",
            "sd.SPI_CLK": "D13"
        },
        "RASPBERRY_PI_PICO": {
            "PIN_ANALOG_IN": "A0",
            "PIN_GPOUT_1": "p27"
        },
        "STM32L452xE": {
            // This was added because not using it seemed to cause intermittent
            // glitchy behavior with UART comms on my dev board
            "target.clock_source": "USE_PLL_HSI"
        }
    }
}